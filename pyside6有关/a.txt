pip install nuitka zstandard
# PyQt 26MB ==> 14.9MB
python -m nuitka --onefile --windows-disable-console --enable-plugin=pyqt6 <your_app>.py
# PySide 34MB ==> 16.8MB


python -m nuitka --onefile --windows-disable-console --enable-plugin=pyside6 <your_app>.py
python -m nuitka --onefile --windows-disable-console --enable-plugin=pyside6 gui_.py
python -m nuitka --standalone --windows-disable-console --enable-plugin=pyside6 --plugin-enable=upx gui_.py --windows-icon-from-ico=./image/ico.ico


这里简单介绍下我上面的nuitka的命令：

--standalone
：方便移植到其他机器，不用再安装python

--show-memory --show-progress
：展示整个安装的进度过程

--nofollow-imports
：不编译代码中所有的import，比如keras，numpy之类的。

--plugin-enable=qt-plugins
：我这里用到pyqt5来做界面的，这里nuitka有其对应的插件。

--follow-import-to=utils,src
：需要编译成C++代码的指定的2个包含源码的文件夹，这里用
,
来进行分隔。

--output-dir=out
：指定输出的结果路径为out。

--windows-icon-from-ico=./logo.ico
：指定生成的exe的图标为logo.ico这个图标，这里推荐一个将图片转成ico格式文件的网站（比特虫）。

--windows-disable-console
：运行exe取消弹框。这里没有放上去是因为我们还需要调试，可能哪里还有问题之类的。

经过1min的编译之后，你就能在你的目录下看到：

├─utils//源码1文件夹├─src//源码2文件夹├─out//生成的exe文件夹
├─demo.build
└─demo.dist
└─demo.exe//生成的exe文件├─logo.ico//demo的图标└─demo.py//main文件
当然这里你会发现真正运行exe的时候，会报错：
no module named torch,cv2,tensorflow
等等这些没有转成C++的第三方包。

这里需要找到这些包（我的是在software\python3.7\Lib\site-packages下）复制（比如numpy,cv2这个文件夹）到
demo.dist
路径下。

至此，exe能完美运行啦！



python -m nuitka --standalone --show-memory --show-progress --windows-disable-console --enable-plugin=pyside6 --plugin-enable=upx gui_.py --windows-icon-from-ico=./image/ico.ico
